package com.sushkoolesua.kotlincourse.lesson26.homework

//Задания на отработку синтаксиса

//Напишите функцию, которая принимает другую функцию без аргументов и возвращаемого значения.

    fun fun1 (funk1: () -> Unit) {
    }

//Создайте функцию, принимающую функцию с одним аргументом типа Int и возвращающую String.

    fun fun2 (funk2: (Int) -> String) {
    }

//Реализуйте функцию, принимающую функцию расширения типа Int, принимающую String и возвращающую Boolean.

    fun fun3(funk3: Int.(String) -> Boolean) {
    }

//Напишите функцию, которая принимает функцию с двумя аргументами типа Double и возвращает Boolean.

    fun fun4(funk4: (arg4: Double, arg44: Double) -> Boolean) {
    }

//Напишите функцию, которая принимает функцию с одним аргументом-дженериком T и возвращает List<T>.

    fun <T> fun5(funk5: (T) -> List <T>) {
    }

//Создайте функцию, принимающую функцию с аргументом типа String и возвращающую другую функцию, принимающую Int и
// возвращающую Boolean.

    fun fun6 (funk6: (String) -> ((Int) -> Boolean) ) {
    }

//Напишите функцию, которая принимает список чисел, множество строк, функцию с аргументами типа List<Int> и Set<String>
// и возвращающую Map<String, Int>.

    fun fun7 (
        list: List<Int>,
        set: Set<String>,
        funk7: (List<Int>, Set<String>) -> Map<String,Int>
    ) {
    }

//Напишите функцию, возвращающую строку, принимающую число и функцию, принимающую число и возвращающую строку

    fun fun8 (
        num: Number,
        funk8: (Number) -> String
    ): String {
        return ""
    }

//Напишите функцию, принимающую функцию, которая возвращает функцию без аргументов и возвращаемого значения.

    fun fun9 (
        funk9: () -> (() -> Unit)
    ) {
    }