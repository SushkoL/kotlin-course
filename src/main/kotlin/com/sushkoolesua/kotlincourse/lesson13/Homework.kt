package com.sushkoolesua.kotlincourse.lesson13

fun main () {

    val number1 = listOf(1, 2, -10, 3, 4, 5, 65, 18,21,7, 3, 8, 115)
    val text1 = listOf("One", "Two", "Three", "Ten")

    //1. Предварительные задачи на использование методов.Подбери подходящий для задачи метод
//    Проверить, что размер коллекции больше 5 элементов.
    println(number1.size)

//    Проверить, что коллекция пустая
    println(number1.isEmpty())

//    Проверить, что коллекция не пустая
    println(number1.isNotEmpty())

//    Взять элемент по индексу или создать значение если индекса не существует
    println(number1.getOrElse(15){255})

//    Собрать коллекцию в строку
    println(number1.joinToString(" "))

//    Посчитать сумму всех значений
    println(number1.sum())

//    Посчитать среднее
    println(number1.average())

//    Взять максимальное число
    println(number1.maxOrNull())

//    Взять минимальное число
    println(number1.minOrNull())

//    Взять первое число или null
    println(number1.firstOrNull())

//    Проверить что коллекция содержит элемент
    println(number1.contains(33))

    //1.2.Задачи на обработку коллекций
//    Отфильтровать коллекцию по диапазону 18-30
        println(number1.filter { it in 18..30})

//    Выбрать числа, которые не делятся на 2 и 3 одновременно
    println(number1.filterNot { it % 2 ==0 && it % 3 == 0 })

//    Очистить текстовую коллекцию от null элементов
        println(text1.filterNotNull())

//    Преобразовать текстовую коллекцию в коллекцию длин слов
    println(text1.map { it.length.toInt() })

//    Преобразовать текстовую коллекцию в мапу, где ключи - слова, а значения - перевёрнутые слова
    println(text1.associateWith { it to it.reversed()})

//    Отсортировать список в алфавитном порядке
    println(text1.sorted())

//    Отсортировать список по убыванию
    println(number1.sortedDescending())

//    Распечатать квадраты элементов списка
    number1.forEach {
        println(it * it)
    }

//    Группировать список по первой букве слов
    println(text1.groupBy { it.first() })

//    Очистить список от дублей
    println(number1.distinct())

//    Взять первые 3 элемента списка
    println(number1.take(3))

//    Взять последние 3 элемента списка
   println(number1.takeLast(3))



//    Задание 2: Характеристика числовой коллекции
//    Написать метод, который принимает коллекцию чисел и возвращает строку с текущим состоянием коллекции используя
//    конструкцию when.
//    Вызвать метод с данными, подходящими под каждую из веток

    val empty = listOf<Int>()
    println(task2(empty))
    val size = listOf(1,2,3,4)
    println(task2(size))
    val noll = listOf(0,1,2,3,4)
    println(task2(noll))
    val massive = listOf(500,600,200)
  //почему-то другие условия не проверяются?

//    Задание 3: Анализ Учебных Оценок
//    Начальные значения: val grades = listOf(85, 58, 90, 74, 88, 67, 95, 92, 50, 42, 12)
//    Цель: Отфильтровать удовлетворительные оценки (>=60), отсортировать оставшиеся по возрастанию и взять первые 3.

    val grades = listOf(85, 58, 90, 74, 88, 67, 95, 92, 50, 42, 12)
    println(((grades.filter { it>=60 }).sorted()).take(3))

//    Задание 4: Создание каталога по первой букве.
//    Начальные значения: val list = listOf(
//        "Стол", "табурет", "ваза", "Кружка", "Зеркало", "ковер", "Шкаф", "часы", "Люстра", "подушка", "Картина",
//        "столик", "Вазон", "шторы", "Пуф", "книга", "Фоторамка", "светильник", "Коврик", "вешалка", "Подставка",
//        "телевизор", "Комод", "полка", "Абажур", "диван", "Кресло", "занавеска", "Бра", "пепельница", "Глобус",
//        "статуэтка", "Поднос", "фигурка", "Ключница", "плед", "Тумба", "игрушка", "Настенные часы", "подсвечник",
//        "Журнальный столик", "сувенир", "Корзина для белья", "посуда", "Настольная лампа", "торшер", "Этажерка")
//    Цель: Привести все слова в списке к нижнему регистру, сгруппировать в каталог по первой букве.

    val list = listOf("Стол", "табурет", "ваза", "Кружка", "Зеркало", "ковер", "Шкаф", "часы", "Люстра", "подушка", "Картина", "столик", "Вазон", "шторы", "Пуф", "книга", "Фоторамка", "светильник", "Коврик", "вешалка", "Подставка", "телевизор", "Комод", "полка", "Абажур", "диван", "Кресло", "занавеска", "Бра", "пепельница", "Глобус", "статуэтка", "Поднос", "фигурка", "Ключница", "плед", "Тумба", "игрушка", "Настенные часы", "подсвечник", "Журнальный столик", "сувенир", "Корзина для белья", "посуда", "Настольная лампа", "торшер", "Этажерка")
    println((list.map { it.lowercase() }).groupBy { it[0] })


//    Задание 5: Подсчёт средней длины слов в списке.
//    Начальные значения из задачи 3.
//    Цель: Перевести все слова в количество букв, подсчитать среднее значение. Вывести форматированный текст с двумя
//    знаками после запятой.

    //не поняла через что вывести с двумя знаками после запятой
    // println((list.map { it.length}.average())


//    Задание 6: Категоризация чисел.
//    Начальные значения: val numbers = listOf(1, 3, 5, 7, 3, 1, 8, 9, 9, 7)
//    Цель: Отобрать уникальные числа, отсортировать по убыванию и сгруппировать по четности (“четные” и “нечетные”).

    val numbers = listOf(1, 3, 5, 7, 3, 1, 8, 9, 9, 7)
    println(numbers.distinct().sorted().groupBy { if (it % 2 == 0) "четные" else "нечетные"})

//    Задание 7: Поиск первого подходящего элемента
//    Начальные значения: val ages = listOf(22, 18, 30, 45, 17, null, 60)
//    Цель: Найти первый возраст в списке, который соответствует условию (больше 18), преобразовать его к строке, или
//    вернуть сообщение "Подходящий возраст не найден".

    val ages = listOf(22, 18, 30, 45, 17, null, 60)
    println(ages.firstOrNull { it!! > 18 }.toString() ?: "Подходящий возраст не найден")

}

fun task2(list2: List<Int>): String {
    return when {
        list2.isEmpty() -> "Пусто"
        list2.size < 5 -> "Короткая"
        list2.getOrNull(0) == 0  -> "Стартовая"
        list2.sum() > 1000 -> "Массивная"
        list2.average() == 10.0  -> "Сбалансированная"
        list2.joinToString(" ").length == 20 -> "Клейкая"
        list2.maxOrNull()!! < -10 -> "Отрицательная"
        list2.minOrNull()!! > 1000 -> "Положительная"
        list2.contains(3) && list2.contains(14) -> "Пи***тая"
        else -> "Уникальная"
    }
}


